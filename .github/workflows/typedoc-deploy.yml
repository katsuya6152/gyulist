name: TypeDoc Documentation Deploy

on:
  pull_request:
    branches: [main]
    paths:
      - 'apps/api/**'
  push:
    branches: [main]
    paths:
      - 'apps/api/**'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 1. TypeDoc生成とテスト
  build-docs:
    runs-on: ubuntu-latest
    outputs:
      api_changed: ${{ steps.filter.outputs.api }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # --- 変更ファイルのフィルタリング ---
      - name: Filter changed paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            api:
              - 'apps/api/**'

      - name: Install pnpm
        run: npm install -g pnpm
  
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # --- APIのビルド（TypeDoc生成に必要） ---
      - name: Build API
        if: steps.filter.outputs.api == 'true'
        working-directory: apps/api
        run: pnpm run build

      # --- TypeDoc生成 ---
      - name: Generate TypeDoc
        if: steps.filter.outputs.api == 'true'
        working-directory: apps/api
        run: pnpm run docs:gen

      # --- 生成されたドキュメントの確認 ---
      - name: List generated docs
        if: steps.filter.outputs.api == 'true'
        run: |
          echo "Generated documentation files:"
          find docs/tsdoc/api -type f -name "*.html" | head -10
          echo "Total HTML files: $(find docs/tsdoc/api -type f -name "*.html" | wc -l)"

      # --- アーティファクトとしてアップロード（PR用） ---
      - name: Upload docs as artifact
        if: steps.filter.outputs.api == 'true' && github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: typedoc-docs
          path: docs/tsdoc/api/
          retention-days: 30

  # 2. GitHub Pagesへのデプロイ（mainブランチへのpush時のみ）
  deploy:
    runs-on: ubuntu-latest
    needs: build-docs
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: >
      github.event_name == 'push' &&
      needs.build-docs.outputs.api_changed == 'true'
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm
  
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # --- APIのビルド ---
      - name: Build API
        working-directory: apps/api
        run: pnpm run build

      # --- TypeDoc生成 ---
      - name: Generate TypeDoc
        working-directory: apps/api
        run: pnpm run docs:gen

      # --- GitHub Pagesへのデプロイ ---
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/tsdoc/api/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # 3. PRでのプレビュー（オプション）
  preview:
    runs-on: ubuntu-latest
    needs: build-docs
    if: >
      github.event_name == 'pull_request' &&
      needs.build-docs.outputs.api_changed == 'true'
    steps:
      - name: Download docs artifact
        uses: actions/download-artifact@v4
        with:
          name: typedoc-docs
          path: docs/tsdoc/api/

      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // 生成されたファイルの確認
            const docsPath = 'docs/tsdoc/api';
            if (fs.existsSync(docsPath)) {
              const files = fs.readdirSync(docsPath);
              const htmlFiles = files.filter(f => f.endsWith('.html'));
              
              const comment = `## 📚 TypeDoc Documentation Generated
            
            ✅ TypeDoc documentation has been generated successfully!
            
            **Generated files:** ${htmlFiles.length} HTML files
            **Main file:** \`index.html\`
            
            📦 Documentation is available as an artifact in this PR.
            🚀 Will be deployed to GitHub Pages when merged to main.
            
            **Files generated:**
            \`\`\`
            ${files.slice(0, 10).join('\n')}${files.length > 10 ? '\n...' : ''}
            \`\`\`
            `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
