name: OpenAPI Preview

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install deps
        run: pnpm install --frozen-lockfile=false

      - name: Generate OpenAPI JSON
        working-directory: apps/api
        run: pnpm openapi:gen

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-spec
          path: docs/openapi.json

  pages:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download OpenAPI artifact
        uses: actions/download-artifact@v4
        with:
          name: openapi-spec
          path: docs

      - name: Prepare Swagger UI
        run: |
          mkdir -p public
          curl -L -o public/swagger-ui.zip https://github.com/swagger-api/swagger-ui/archive/refs/heads/master.zip
          sudo apt-get update && sudo apt-get install -y unzip
          unzip public/swagger-ui.zip -d public
          mv public/swagger-ui-master/dist public/swagger
          # create index.html pointing to openapi.json
          cat > public/swagger/index.html <<'HTML'
          <!doctype html>
          <html>
          <head>
            <meta charset="utf-8"/>
            <title>Gyulist API - Swagger UI</title>
            <link rel="stylesheet" href="https://unpkg.com/swagger-ui-dist@5/swagger-ui.css" />
          </head>
          <body>
          <div id="swagger-ui"></div>
          <script src="https://unpkg.com/swagger-ui-dist@5/swagger-ui-bundle.js"></script>
          <script>
            window.onload = () => {
              // Use relative path so it works under project pages path
              window.ui = SwaggerUIBundle({ url: 'openapi.json', dom_id: '#swagger-ui' });
            };
          </script>
          </body>
          </html>
          HTML
          # place openapi.json beside the swagger index for reliable relative loading
          mv docs/openapi.json public/swagger/openapi.json

      # --- TypeDoc生成と配置 ---
      - name: Setup Node for TypeDoc
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm for TypeDoc
        run: npm install -g pnpm

      - name: Install API dependencies
        working-directory: apps/api
        run: pnpm install --frozen-lockfile

      - name: Build API for TypeDoc
        working-directory: apps/api
        run: pnpm run build

      - name: Generate TypeDoc
        working-directory: apps/api
        run: |
          echo "🔧 Generating TypeDoc documentation..."
          pnpm run docs:gen
          echo "✅ TypeDoc generation completed"
          
          # Check if files were generated (relative to apps/api)
          if [ -d "../../docs/tsdoc/api" ]; then
            echo "📁 TypeDoc output directory exists"
            ls -la ../../docs/tsdoc/api/
          else
            echo "⚠️ TypeDoc output directory not found"
            echo "Checking current directory..."
            ls -la
            echo "Checking docs directory..."
            ls -la docs/ || echo "docs directory not found"
            exit 1
          fi

      - name: Prepare TypeDoc for deployment
        run: |
          # Create typedoc directory and copy TypeDoc to public directory alongside Swagger UI
          mkdir -p public/typedoc
          
          # Check if TypeDoc files exist before copying
          if [ -d "docs/tsdoc/api" ] && [ "$(ls -A docs/tsdoc/api)" ]; then
            echo "✅ TypeDoc files found, copying to public/typedoc/"
            cp -r docs/tsdoc/api/* public/typedoc/
            echo "✅ TypeDoc files copied successfully"
          else
            echo "⚠️ TypeDoc files not found or directory is empty"
            echo "Creating placeholder index.html"
            cat > public/typedoc/index.html <<'HTML'
            <!doctype html>
            <html>
            <head>
              <meta charset="utf-8"/>
              <title>TypeDoc - Not Available</title>
            </head>
            <body>
              <h1>TypeDoc Documentation</h1>
              <p>TypeDoc documentation is not available at this time.</p>
              <p>Please check the build logs for more information.</p>
            </body>
            </html>
            HTML
          fi

      - name: Verify deployment structure
        run: |
          echo "📋 Final deployment structure:"
          echo "Public directory contents:"
          ls -la public/
          echo ""
          echo "Swagger directory contents:"
          ls -la public/swagger/ || echo "Swagger directory not found"
          echo ""
          echo "TypeDoc directory contents:"
          ls -la public/typedoc/ || echo "TypeDoc directory not found"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4


